@page
@model WebApp.EFWithRazor.AspNetCore.ContosoUniversity.Pages.Students.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-page="Create">Create New</a>

    <form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type ="text" mame="searchString" value="@Model.currentFilter" />
            <input type ="submit" value="Search" class="btn btn-default" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.nameSort"
                   asp-route-currentFillter ="@Model.currentFilter">
                    @Html.DisplayNameFor(model => model.Student[0].LastName)
                </a>
            <th>
                @Html.DisplayNameFor(model => model.Student[0].FirstMidName)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.dateSort"
                   asp-route-currentFilter="@Model.currentFilter">
                    @Html.DisplayNameFor(model => model.Student[0].EnrollmentDate)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Student) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstMidName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{  var preDisabled = !Model.Student.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Student.HasNextPage ? "disabled" : "";
 }

<a asp-page="./Index"
   asp-route-sortOrder ="@Model.currentSort"
   asp-route-pageIndex ="@(Model.Student.PageIndex - 1)"
   asp-route-currentFilter ="@Model.currentFilter"
   class="btn btn-default @preDisabled"> Previous</a>

<a asp-page="./Index"
   asp-route-sortOrder="@Model.currentSort"
   asp-route-pageIndex="@(Model.Student.PageIndex + 1)"
   asp-route-currentFilter="@Model.currentFilter"
   class="btn btn-default @nextDisabled">Next</a>